"use strict";

const fs = require("fs");
const path = require("path");
const gql = require("graphql-tag");
const EasyGraphQLTester = require("../lib");
const { EmailAddress } = require("graphql-scalars");
const {
  parse,
  validate,
  findDeprecatedUsages,
  getOperationAST
} = require("graphql");

// const testSchema = fs.readFileSync(path.join(__dirname, 'schema.gql'), 'utf8')

// const schema = gql`
//   scalar EmailAddress

//   type Lead {
//     name: String!
//     email: EmailAddress!
//   }

//   type Query {
//     lead: Lead!
//   }
// `

// const lead = (root, args, ctx) => {
//   return {
//     name: "demo",
//     email: "demo@demo.com"
//   };
// };

// const resolvers = {
//   EmailAddress,
//   Query: {
//     lead
//   }
// };

// const tester = new EasyGraphQLTester(schema, resolvers)

const query = `
  {
    lead {
      name
      email
    }
  }
`;

const q = parse(query);
const operationNode = getOperationAST(q);
console.log("---->", operationNode.selectionSet.selections[0]);

// tester.graphql(query)
//   .then(result => console.log(result))
//   .catch(err => console.log(err))
